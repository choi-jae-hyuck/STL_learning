

==============================
Fri May 24 15:20:25 2019
==============================

//----------------------------------------------------
//2019 STL 5.23 목
//
//알고리즘 함수 알아보기
// sort				- 그냥소트
// stable_sort		- 원소의 순서를 유지하며 소트
// partial_sort		- 앞에서 부터 n까지 정렬
// nth_element		- 앞에서 부터 n까지와 나머지를 분리
//
// partition		- 조건으로 분리
//
// is_sorted		- 어떤 시퀀스가 정렬되어 있나 판단한다
// merge			- 정렬된 시퀀스라면 정렬상태를 유지하며 합친다
// equal_range		- 
//----------------------------------------------------

#include <iostream>
#include <vector>
#include <algorithm>
#include <iterator>
#include "save.h"
#include "String.h"
using namespace std;


int main()
{
	vector<String> v;
	for (int i = 0; i < 100; ++i)
		v.emplace_back(i%10 + 1);

	for (const String & s : v)
		cout << s << endl;

	//길이가 5인 원소가 있나?
	//있다면 어디에 있는지(몇번 원소인지) 모두 출력하라
	String test{ 5 };
	auto p = find(v.begin(), v.end(), test);
	if (p != v.end()) {
		cout << "길이 5인 원소가 있다." << endl;

		//있다면 어디에 있는지(몇번째 원소인지) 모두출력하라
		while (*p == test) {
			cout << "위치 - " << distance(v.begin(), p) + 1 << endl;
			++p;
		}
	}
	else
		cout << "길이 5인 원소는 없다." << endl;
	for (int i = 0; i < v.size(); ++i) {					//정렬하지 않았을때 쓰는 코드
		if (v[i].getNum() == 5)
			cout << "위치 - " << i+1 <<endl;
	}
	if (binary_search(v.begin(), v.end(), String{ 5 })) {	//정렬되었을때 쓰는 코드
		equal_range(v.begin(), v.end(), String{ 5 });
	}
	else
		cout << "길이 5는 없다." << endl;

	save("소스.cpp");
}